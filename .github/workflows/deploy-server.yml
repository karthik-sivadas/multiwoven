name: Deploy Server

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["server-docker-build (AMD)"]
    branches: ["main"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: multiwoven/multiwoven-server-ee

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: multiwoven/helm-charts

      - uses: azure/setup-helm@v4.2.0
        with:
          version: 'latest'
        id: install

      - name: Azure Login
        uses: Azure/login@v2.1.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.1.3'

      - name: Gets K8s context
        uses: azure/aks-set-context@v3
        with:
            resource-group: ${{ vars.RESOURCE_GROUP }}
            cluster-name: ${{ vars.CLUSTER_NAME }}
            admin: 'true'
            use-kubelogin: 'true'

      - name: Deploy server to staging
        env:
          API_HOST: ${{ vars.API_HOST }}
          APP_ENV: ${{ vars.APP_ENV }}
          APP_REVISION: ${{ github.sha }}
          APPSIGNAL_PUSH_API_KEY: ${{ secrets.APPSIGNAL_PUSH_API_KEY }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          TEMPORAL_HOST: ${{ secrets.TEMPORAL_HOST }}
          TEMPORAL_NAMESPACE: ${{ secrets.TEMPORAL_NAMESPACE }}
          TLS_ADMIN_EMAIL: ${{ secrets.TLS_ADMIN_EMAIL }}
          UI_HOST: ${{ vars.UI_HOST }}
          VITE_API_HOST: ${{ vars.VITE_API_HOST }}
          VITE_BRAND_COLOR: ${{ vars.VITE_BRAND_COLOR }}
          VITE_BRAND_HOVER_COLOR: ${{ vars.VITE_BRAND_HOVER_COLOR }}
          VITE_BRAND_NAME: ${{ vars.VITE_BRAND_NAME }}
          VITE_LOGO_URL: ${{ vars.VITE_LOGO_URL }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: charts/multiwoven
        run: |
          helm upgrade -i --reuse-values multiwoven . \
            --set multiwovenConfig.apiHost=$API_HOST \
            --set multiwovenConfig.appEnv=$APP_ENV \
            --set multiwovenConfig.appRevision=$APP_REVISION \
            --set multiwovenConfig.appsignalPushApiKey=$APPSIGNAL_PUSH_API_KEY \
            --set multiwovenConfig.dbHost=$DB_HOST \
            --set multiwovenConfig.dbUsername=$DB_USERNAME \
            --set multiwovenConfig.dbPassword=$DB_PASSWORD \
            --set multiwovenConfig.privateRepo=true \
            --set multiwovenConfig.registrySecretName=myregistrykey \
            --set multiwovenConfig.temporalHost=$TEMPORAL_HOST \
            --set multiwovenConfig.temporalNamespace=$TEMPORAL_NAMESPACE \
            --set multiwovenConfig.tlsAdminEmail=$TLS_ADMIN_EMAIL \
            --set multiwovenConfig.tlsCertIssuer="letsencrypt-prod" \
            --set multiwovenConfig.uiHost=$UI_HOST \
            --set multiwovenConfig.viteApiHost=$VITE_API_HOST \
            --set multiwovenConfig.viteBrandName="$VITE_BRAND_NAME" \
            --set multiwovenConfig.viteBrandColor="$VITE_BRAND_COLOR" \
            --set multiwovenConfig.viteBrandHoverColor="$VITE_BRAND_HOVER_COLOR" \
            --set multiwovenConfig.viteLogoUrl=$VITE_LOGO_URL \
            --set multiwovenPostgresql.enabled=false \
            --set multiwovenServer.multiwovenServer.image.repository=$IMAGE_NAME \
            --set multiwovenServer.multiwovenServer.image.tag=$IMAGE_TAG \
            --set multiwovenWorker.multiwovenWorker.args="{./app/temporal/cli/worker}" \
            --set multiwovenWorker.multiwovenWorker.image.repository=$IMAGE_NAME \
            --set multiwovenWorker.multiwovenWorker.image.tag=$IMAGE_TAG \
            --set temporal.enabled=false
